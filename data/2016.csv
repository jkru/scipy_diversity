Eric Jones@Integrating Scripting into Commercial Applications@n@@0@s
Sebastian Benthall@Computational Supply Chain Risk Management for Open Source Software@n@@0@s
Eli Bressert@Python Powered Moonshots in Data Science@n@@0@s
Katie Malone@Give Your Data an Entrance Exam: Tools from Psychometrics for Data Quality Evaluation@n@@0@s
James A. Bednar@HoloViews: Let your Data Reveal Itself@n@@1@s
Jean-Luc Stevens@HoloViews: Let your Data Reveal Itself@n@@1@s
Philipp Rudiger@HoloViews: Let your Data Reveal Itself@n@@1@s
Fernando Perez@JupyterLab: Building Blocks for Interactive Computing@n@@1@s
Brian Granger@JupyterLab: Building Blocks for Interactive Computing@n@@1@s
Cameron Oelsen@JupyterLab: Building Blocks for Interactive Computing@n@@1@s
Chris Colbert@JupyterLab: Building Blocks for Interactive Computing@n@@1@s
Jason Grout@JupyterLab: Building Blocks for Interactive Computing@n@@1@s
Steven Silvester@JupyterLab: Building Blocks for Interactive Computing@n@@1@s
Afshin Darian@JupyterLab: Building Blocks for Interactive Computing@n@@1@s
Sylvain Corlay@JupyterLab: Building Blocks for Interactive Computing@n@@1@s
David Willmer@JupyterLab: Building Blocks for Interactive Computing@n@@1@s
Amit Kapoor@Visualising Big Data@n@@0@s
Andreas Mueller@Automating Machine Learning?@n@@0@s
Bargava Subramanian@Communicating Model Results@n@@0@s
Deborah Hanus@Constructing Models to Deal with Missing Data@n@@0@s
James A. Bednar@Datashader: Revealing the Structure of Genuinely Big Data@n@@1@s
Peter Wang@Datashader: Revealing the Structure of Genuinely Big Data@n@@1@s
Joseph Cottam@Datashader: Revealing the Structure of Genuinely Big Data@n@@1@s
Jim Crist@Datashader: Revealing the Structure of Genuinely Big Data@n@@1@s
Leland McInnes@High Quality, High Performance Clustering with HDBSCAN*@n@@1@s
John Healy@High Quality, High Performance Clustering with HDBSCAN*@n@@1@s
Deborah Hanus@How to “Scrape” Together a Great Dataset Using Things You Find on the Internet: Using Python & SciPy to Predict Oscar Winners & Box Office Hits@n@@0@s
Evan Wyse@Large Scale Geospatial Analytics with Python, Spark, and Impala@n@@0@s
Bill Lattner@Python and R Together at Last: Writing Cross-Language Tools@n@@0@s
Randy Paffenroth@Python at the Intersection of Data Science, Machine Learning and Cyber Anomaly Detection@n@@0@s
Almar Klein@Running Python Apps in the Browser@n@@0@s
Stanley Seibert@Scaling Up and Out: Programming GPU Clusters with Numba and Dask@n@@1@s
Siu Kwan Lam@Scaling Up and Out: Programming GPU Clusters with Numba and Dask@n@@1@s
Jaya  Narasimhan@Tell Me Something I Don't Know: Analyzing OkCupid Profiles@n@@1@s
Juan  Shishido@Tell Me Something I Don't Know: Analyzing OkCupid Profiles@n@@1@s
Matar Haller@Tell Me Something I Don't Know: Analyzing OkCupid Profiles@n@@1@s
Ryan May@Bootstrapping an Open Source Library: How MetPy Got Up and Running with Lazy Developers@n@@0@s
Nicholas Ronnei@Democratizing Geostats@n@@0@s
Ben Lasscock@Generalized Earthquake Focal Mechanism Classification@n@@0@s
Brendon Hall@Getting More from Your Core: Processing and Analysis of Core CT Data@n@@0@s
Joel Akeret@HOPE: A Python Just-In-Time Compiler for Astrophysical Computations@n@@0@s
John Leeman@Modeling Rate-and-State Friction with Python@n@@0@s
Jonathon Smith@MONTE Python for Deep Space Navigation@n@@0@s
Lindsey Heagy@Using Open Source Tools to Refactor Geoscience Education@n@@0@s
Rowan Cockett@Working towards all the Geophysics, but Backwards@n@@0@s
Ryan Lovett@A Whirlwind Tour of UC Berkeley’s Data Science Education Program@n@@1@s
Cathryn Carson@A Whirlwind Tour of UC Berkeley’s Data Science Education Program@n@@1@s
Chris  Holdgraf@A Whirlwind Tour of UC Berkeley’s Data Science Education Program@n@@1@s
John DeNero@A Whirlwind Tour of UC Berkeley’s Data Science Education Program@n@@1@s
David Culler@A Whirlwind Tour of UC Berkeley’s Data Science Education Program@n@@1@s
Sam Lau@A Whirlwind Tour of UC Berkeley’s Data Science Education Program@n@@1@s
Elaine Angelino@A Whirlwind Tour of UC Berkeley’s Data Science Education Program@n@@1@s
Prabhu Ramachandran@The FOSSEE Python Project@n@@0@s
Mark Wickert@A Simulation Framework for Studying the Code Acquisition and Tracking Functions of a Global Positioning System (GPS) Receiver@n@@0@s
Kyle Niemeyer@PyTeCK: A Python-based Automatic Testing Package for Chemical Kinetic Models@n@@0@s
Chih-Jen Sung@UConnRCMPy: Python-based data analysis for Rapid Compression Machines@n@@1@s
Bryan Weber@UConnRCMPy: Python-based data analysis for Rapid Compression Machines@n@@1@s
Oliver Nagy@Everyone Can Be a Rocket Scientist@n@@0@s
Demba Ba@"Labs in the Wild": Teaching Signal Processing Using Wearables and Jupyter Notebooks in the Cloud@n@@0@s
Chan Park@A String Theorist's Journey with Python@n@@0@s
Jim Crist@Dask: Parallel and Distributed Computing@n@@1@s
Matthew Rocklin@Dask: Parallel and Distributed Computing@n@@1@s
Eduardo Franco@Processing a Petabyte of Planetary Pixels with Python@n@@1@s
Samuel Skillman@Processing a Petabyte of Planetary Pixels with Python@n@@1@s
Tim Kelton@Processing a Petabyte of Planetary Pixels with Python@n@@1@s
Caitlin Kontgis@Processing a Petabyte of Planetary Pixels with Python@n@@1@s
Michael Warren@Processing a Petabyte of Planetary Pixels with Python@n@@1@s
Steven Brumby@Processing a Petabyte of Planetary Pixels with Python@n@@1@s
Ryan Keisler@Processing a Petabyte of Planetary Pixels with Python@n@@1@s
Xander Rudelis@Processing a Petabyte of Planetary Pixels with Python@n@@1@s
Rick Chartrand@Processing a Petabyte of Planetary Pixels with Python@n@@1@s
Eric Chisolm@Processing a Petabyte of Planetary Pixels with Python@n@@1@s
Daniela Moody@Processing a Petabyte of Planetary Pixels with Python@n@@1@s
Mark Mathis@Processing a Petabyte of Planetary Pixels with Python@n@@1@s
Lori Burns@QCDB: Database Tools for Managing and Harmonizing Quantum Chemistry@n@@0@s
Catherine Holloway@3D drawing in Python: Reviving Visual@n@@0@s
Matthew Turk@Analysis and Visualization of 3D Data with yt@n@@0@s
Philip Elson@Community Powered Packaging with conda-forge@n@@0@s
Anton Malakhov@Composable Multi-Threading for Python Libraries@n@@0@s
David Dotson@datreant: Persistent, Pythonic Trees for Heterogeneous Data@n@@1@s
Max Linke@datreant: Persistent, Pythonic Trees for Heterogeneous Data@n@@1@s
Richard Gowers@datreant: Persistent, Pythonic Trees for Heterogeneous Data@n@@1@s
Oliver Beckstein@datreant: Persistent, Pythonic Trees for Heterogeneous Data@n@@1@s
Sean Seyler@datreant: Persistent, Pythonic Trees for Heterogeneous Data@n@@1@s
Richard Lewis@Deep Learning for QSAR@n@@0@s
Min Ragan-Kelley@Diffing and Merging Jupyter Notebooks with nbdime@n@@0@s
Mark Wiebe@DyND Callables@n@@0@s
Stuart Geiger@Governing Open Source Projects at Scale: Lessons from Wikipedia's Growing Pains@n@@0@s
Josef Heinen@GR: Plotting with Python or Julia@n@@0@s
Chi-keung Luk@GT-Py: Accelerating NumPy programs on CPU&GPU with Minimal Programming Effort@n@@0@s
James Powell@Hacking the CPython Interpreter@n@@0@s
Tomas Ostasevicius@HyperSpy - How to Easily Bend Multi-dimension Data to your (Analytical) Will.@n@@0@s
Brett Naul@Machine Learning for Time Series Data in Python@n@@0@s
Michael Pacer@Proselint: The Linting of Science Prose, and the Science of Prose Linting@n@@1@s
Jordan Suchow@Proselint: The Linting of Science Prose, and the Science of Prose Linting@n@@1@s
Nathaniel Smith@Reinventing the .whl: New Developments in the Upstream Python Packaging Ecosystem@n@@0@s
Isuru Fernando@SymEngine: A Fast Symbolic Manipulation Library@n@@1@s
Ondřej Čertík@SymEngine: A Fast Symbolic Manipulation Library@n@@1@s
Thilina Rathnayake@SymEngine: A Fast Symbolic Manipulation Library@n@@1@s
Abhinav Agarwal@SymEngine: A Fast Symbolic Manipulation Library@n@@1@s
Anthony Scopatz@SymPy Code Generation@n@@1@s
Aaron Meurer@SymPy Code Generation@n@@1@s
Gonzalo Peña-Castellanos@What's new in Spyder 3.0@n@@1@s
Carlos Cordoba@What's new in Spyder 3.0@n@@1@s
Devin Matthews@A "BLAS" for Tensors with Portable High Performance@n@@0@s
Adam Kunen@Conduit: A Scientific Data Exchange Library for HPC Simulations@n@@1@s
Brian Ryujin@Conduit: A Scientific Data Exchange Library for HPC Simulations@n@@1@s
Cyrus Harrison@Conduit: A Scientific Data Exchange Library for HPC Simulations@n@@1@s
Michael Milligan@JupyterHub as an Interactive Supercomputing Gateway@n@@0@s
Yu Feng@Launching Python Applications on Peta-scale Massively Parallel Systems@n@@0@s
Brendan Smithyman@Out with the Old and in with the New: Embedding Python in Old Fortran HPC Code@n@@0@s
Daniel Smith@Psi4: A Case Study on Modernizing and Modularizing Quantum Chemistry with Python and C++@n@@0@s
Prabhu Ramachandran@PySPH: A Reproducible and High-performance Framework for Smoothed Particle Hydrodynamics@n@@0@s
Yoshiki Vazquez-Baeza@Emperor, Interactive Beta-diversity Exploration@n@@0@s
Brian Helba@HistomicsTK: Seamless Analytics for Biomedical Microscopy@n@@0@s
Tyler Reddy@MDAnalysis: A Python Package for the Rapid Analysis of Molecular Dynamics Simulations@n@@1@s
Ian Kenney@MDAnalysis: A Python Package for the Rapid Analysis of Molecular Dynamics Simulations@n@@1@s
David Dotson@MDAnalysis: A Python Package for the Rapid Analysis of Molecular Dynamics Simulations@n@@1@s
Max Linke@MDAnalysis: A Python Package for the Rapid Analysis of Molecular Dynamics Simulations@n@@1@s
Jonathan Barnoud@MDAnalysis: A Python Package for the Rapid Analysis of Molecular Dynamics Simulations@n@@1@s
Jan Dománski@MDAnalysis: A Python Package for the Rapid Analysis of Molecular Dynamics Simulations@n@@1@s
Richard Gowers@MDAnalysis: A Python Package for the Rapid Analysis of Molecular Dynamics Simulations@n@@1@s
Oliver Beckstein@MDAnalysis: A Python Package for the Rapid Analysis of Molecular Dynamics Simulations@n@@1@s
Sébastien Buchoux@MDAnalysis: A Python Package for the Rapid Analysis of Molecular Dynamics Simulations@n@@1@s
Manuel Melo@MDAnalysis: A Python Package for the Rapid Analysis of Molecular Dynamics Simulations@n@@1@s
Sean Seyler@MDAnalysis: A Python Package for the Rapid Analysis of Molecular Dynamics Simulations@n@@1@s
Greg Caporaso@QIIME 2: Self-documenting, Extensible, and Reproducible Microbiome Analysis in Python 3.@n@@0@s
Daniel Allan@Experiments as Iterators: asyncio in Science@n@@1@s
Thomas Caswell@Experiments as Iterators: asyncio in Science@n@@1@s
Kenneth Lauer@Experiments as Iterators: asyncio in Science@n@@1@s
Shreyas Cholia@MPCite: Continuous and High-throughput Allocation of Digital Object Identifiers for Calculated and Contributed Data in the Materials Project@n@@1@s
Daniel Gunter@MPCite: Continuous and High-throughput Allocation of Digital Object Identifiers for Calculated and Contributed Data in the Materials Project@n@@1@s
Anubhav Jain@MPCite: Continuous and High-throughput Allocation of Digital Object Identifiers for Calculated and Contributed Data in the Materials Project@n@@1@s
Patrick Huck@MPCite: Continuous and High-throughput Allocation of Digital Object Identifiers for Calculated and Contributed Data in the Materials Project@n@@1@s
Kristin Persson@MPCite: Continuous and High-throughput Allocation of Digital Object Identifiers for Calculated and Contributed Data in the Materials Project@n@@1@s
Donald Winston@MPCite: Continuous and High-throughput Allocation of Digital Object Identifiers for Calculated and Contributed Data in the Materials Project@n@@1@s
Jessica Hamrick@Reproducible, One-Button Workflows with the Jupyter Notebook and Scons@n@@0@s
Andrew Osheroff@Sharing Reproducible Environments with Binder@n@@0@s
